% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PIT_local.R
\name{PIT_local}
\alias{PIT_local}
\title{Obtain local PIT-values from a model}
\usage{
PIT_local(
  xcal,
  ycal,
  yhat,
  mse,
  clusters = 6,
  n_neighboor = 1000,
  PIT = PIT_global
)
}
\arguments{
\item{xcal}{features/covariates from calibration set}

\item{ycal}{observations of calibration set}

\item{yhat}{predicted outputs from the calibrations et}

\item{mse}{Mean Squared Error of the model}

\item{clusters}{Number of partitions to create for local calibration. Centroids calculated by k-means method.
Default set to 6.}

\item{n_neighboor}{Number of neighboors in the KNN method.}

\item{PIT}{function to return the PIT-values. Default set to PIT_global() from this package.}
}
\value{
A tibble with five column names "part", "y_cal",
"y_hat", "pit" and "n"
}
\description{
Return local PIT-values. Centroids for localization is obtained by k-means method from stats package.
The vicinity of such centroids are selected though a aproximate k-nearst neighboors method from RANN package.
}
\examples{
n <- 100000
mu <- function(x1){
10 + 5*x1^2
}

sigma_v <- function(x1){
 30*x1
}

x <- runif(n, 2, 20)
y <- rnorm(n, mu(x), sigma_v(x))

x_train <- x[1:80000]
y_train <- y[1:80000]

x_cal <- x[80001:100000]
y_cal <- y[80001:100000]

model <- lm(y_train ~ x_train)
y_hat <- predict(model, newdata=data.frame(x_test=x_cal))
MSE <- (summary(model)$sigma)^2
PIT_local(xcal = x_cal, ycal=y_cal, yhat=y_hat, mse=MSE)

}
